import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn import tree, metrics, model_selection
# Veriyi yukle

data = pd.read_csv('car.data',names=['buying','maint','doors','persons','lug_boot','safety','class'])
data.head()

# Sinif degiskenini belirle
data['class'],class_names = pd.factorize(data['class'])


print(class_names)
print(data['class'].unique())


# kategorik degiskenleri kodlama
data['buying'],_ = pd.factorize(data['buying'])
data['maint'],_ = pd.factorize(data['maint'])
data['doors'],_ = pd.factorize(data['doors'])
data['persons'],_ = pd.factorize(data['persons'])
data['lug_boot'],_ = pd.factorize(data['lug_boot'])
data['safety'],_ = pd.factorize(data['safety'])
data.head()




#veriyi ve sinif degiskenini belirle
X = data.iloc[:,:-1]
y = data.iloc[:,-1]



# Eğitim ve test kümelerine ayir:

X_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=0.3, random_state=0)



# karar agacini egit
dtree = tree.DecisionTreeClassifier(criterion='gini', max_depth=10, random_state=0)

dtree.fit(X_train, y_train)

# test verisi uzerinden tahminleme yap
y_pred = dtree.predict(X_test)



# modelin degerlendirilmesi
count_misclassified = (y_test != y_pred).sum()
print('Misclassified samples: {}'.format(count_misclassified))

accuracy = metrics.accuracy_score(y_test, y_pred)
print('Accuracy: {:.2f}'.format(accuracy))


# ogrenilen arar agacini gorsellestir 
import graphviz
feature_names = X.columns

dot_data = tree.export_graphviz(dtree, out_file='tree.png', filled=True, rounded=True,
                                feature_names=feature_names,  
                                class_names=class_names)
quit()

graph=graphviz.Source(dot_data)
